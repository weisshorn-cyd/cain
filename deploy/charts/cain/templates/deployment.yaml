apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cain.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cain.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cain.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cain.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: {{ include "cain.fullname" . }}
              topologyKey: kubernetes.io/hostname
      serviceAccountName: {{ include "cain.serviceAccountName" . }}
      containers:
        - name: {{ include "cain.fullname" . }}
          {{- with .Values.image }}
          image: "{{- if .registry -}}{{ .registry }}/{{- end -}}{{ .repository }}:{{ default $.Chart.AppVersion .tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TLS_CERT_FILE
              value: /run/secrets/tls/tls.crt
            - name: TLS_KEY_FILE
              value: /run/secrets/tls/tls.key
            - name: CA_SECRET
              value: {{ .Values.caSecret.name }}/{{ .Values.caSecret.key }}
            - name: CA_ISSUER
              value: {{ .Values.config.injectorIssuer }}
            - name: METADATA_DOMAIN
              value: "{{ .Values.config.metadataDomain }}"
            - name: REDHAT_INIT_IMAGE
              {{- with .Values.redhatInitImage }}
              value: "{{- if .registry -}}{{ .registry }}/{{- end -}}{{ .repository }}"
            - name: REDHAT_INIT_TAG
              value: {{ default $.Chart.AppVersion .tag }}
              {{- end }}
            - name: DEBIAN_INIT_IMAGE
              {{- with .Values.debianInitImage }}
              value: "{{- if .registry -}}{{ .registry }}/{{- end -}}{{ .repository }}"
            - name: DEBIAN_INIT_TAG
              value: {{ default $.Chart.AppVersion .tag }}
              {{- end }}
            - name: PORT
              value: "{{ .Values.containerPort }}"
            # Optional, add more verbosity to the logs
            - name: LOG_LEVEL
              value: '{{ .Values.config.logLevel | default "info" }}'
            - name: TRUSTSTORE_PASSWORD
              value: "{{ .Values.config.truststorePassword }}"
            - name: JVM_ENV_VAR
              value: "{{ .Values.config.jvmEnvVar }}"
            - name: CPU_LIMIT
              value: {{ .Values.caInjectionInitcontainer.resources.limits.cpu }}
            - name: MEM_LIMIT
              value: {{ .Values.caInjectionInitcontainer.resources.limits.memory }}
            - name: CPU_REQUEST
              value: {{ .Values.caInjectionInitcontainer.resources.requests.cpu }}
            - name: MEM_REQUEST
              value: {{ .Values.caInjectionInitcontainer.resources.requests.memory }}
          ports:
            - containerPort: {{ .Values.containerPort }}
              name: webhook-api
            - containerPort: {{ .Values.metricsPort }}
              name: metrics
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /run/secrets/tls
              name: serving-cert
              readOnly: true
      volumes:
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: {{ include "cain.servingCertificate" . }}
